# PostgreSQL DB Configuration for Neon
spring.datasource.url=jdbc:postgresql://ep-bitter-sun-a1sbbuen-pooler.ap-southeast-1.aws.neon.tech:5432/notification_db?sslmode=require&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
spring.datasource.username=neondb_owner
spring.datasource.password=npg_X0ULk3uQCRZj
spring.datasource.driver-class-name=org.postgresql.Driver

# Service Configuration
server.port=8084
spring.application.name=notification-service

# Eureka Configuration 
eureka.client.service-url.defaultZone=https://eureka-server-2ktu.onrender.com/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# JPA & Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Kafka Configuration 
#spring.kafka.bootstrap-servers=kafka:9092
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.group-id=smart-fleet
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Kafka Listener (disable only for test profiles)
#for running test profile
# spring.kafka.listener.auto-startup=false
