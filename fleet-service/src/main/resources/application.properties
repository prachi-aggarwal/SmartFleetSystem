# === PostgreSQL - NeonDB =======
spring.datasource.url=jdbc:postgresql://ep-bitter-sun-a1sbbuen-pooler.ap-southeast-1.aws.neon.tech:5432/fleet_db?sslmode=require&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
spring.datasource.username=neondb_owner
spring.datasource.password=npg_X0ULk3uQCRZj
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.max-lifetime=300000
spring.datasource.hikari.leak-detection-threshold=60000

# === JPA / Hibernate ===========
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# === Eureka Client =============
spring.application.name=fleet-service
eureka.client.service-url.defaultZone=https://eureka-server-2ktu.onrender.com/eureka/
eureka.instance.hostname=fleet-service.onrender.com
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.prefer-ip-address=true


# === Server ====================
# This line makes Render assign PORT from environment and fallback to 8085 locally
server.port=${PORT:8085}

# === Spring Actuator ==========
management.endpoints.web.exposure.include=health,info

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration

# Tomcat tuning
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=20
